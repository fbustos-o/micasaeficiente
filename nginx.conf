# Servidor para desarrollo, en caso de cargar a GIT ministerial, NO SUBIR ESTE ARCHIVO REVISAR VERSIÓN 8. 
# Redirige todo el tráfico HTTP (puerto 80) a HTTPS
server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
}

# Servidor principal que escucha en HTTPS (puerto 443)
server {
    listen 443 ssl;
    server_name localhost;

    # Ruta a los certificados SSL que montaremos con Docker.
    # Usamos los nombres convencionales .pem y .key dentro del contenedor.
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # Configuraciones de SSL (buenas prácticas)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # El resto de la configuración de rutas no cambia.
    location / {
        root /usr/share/nginx/html/web-front;
        try_files $uri /index.html;
    }

    location /casa_3d/ {
        alias /usr/share/nginx/html/casa_3d/;
        try_files $uri $uri/ /casa_3d/index.html;
    }

    location /mi_casa_eficiente/ {
        proxy_pass http://backend:8000/mi_casa_eficiente/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Servidor secundario que escucha en HTTP (puerto 80) para producción
#
#
#server {
#    listen 80;
#    server_name localhost;

#    location / {
#        root /usr/share/nginx/html/web-front;
#        try_files $uri /index.html;
#    }

#    location /casa_3d/ {
#        alias /usr/share/nginx/html/casa_3d/;
#        try_files $uri $uri/ /casa_3d/index.html;
#    }

#}
